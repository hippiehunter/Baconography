<ResourceDictionary
    x:Class="SnooStream.Templates.CommentsTemplate"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SnooStream.Templates"
    xmlns:controls="using:SnooStream.Controls"
    xmlns:selector="using:SnooStream.Selectors"
    xmlns:snoodom="using:SnooDom"
    xmlns:vm="using:SnooStream.ViewModel"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <ResourceDictionary.MergedDictionaries>
        <local:VotableControlTemplate />
        <local:CommentCountControlTemplate />
    </ResourceDictionary.MergedDictionaries>

    <DataTemplate x:Key="LoadFullyTemplate" x:DataType="vm:LoadFullCommentsViewModel">
        <Grid>
            <Button Tapped="{x:Bind LoadFully}" Content="{x:Bind Text}" BorderThickness="0" Margin="0"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="CardCommentView" x:DataType="vm:CommentsViewModel">
        <Border HorizontalAlignment="Stretch">
            <Grid HorizontalAlignment="Stretch" Margin="12,0,12,0">

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <!-- Title block -->
                <TextBlock Grid.Row="0"
                   Style="{StaticResource TitleTextBlock}"
                   Text="{x:Bind LinkTitle}"
                   TextTrimming="WordEllipsis"
                   MinHeight="50">
                </TextBlock>

                <!-- Link info, user / time / subreddit / domain -->
                <ContentControl x:Name="linkMetadata" Grid.Row="1"
                            Margin="0,5,0,-6" MinHeight="25"
                            HorizontalAlignment="Stretch" Content="{x:Bind Link, Converter={StaticResource linkMetadataConverter}}"/>

                <!-- Non Editing Content block -->
                <ContentControl Visibility="{x:Bind Link.IsEditing, Mode=OneWay, Converter={StaticResource invertedBooleanVisibilityConverter}}"  
                            x:Name="contentSection" Grid.Row="2" Margin="0"
                            BorderThickness="0"
                            VerticalContentAlignment="Stretch" VerticalAlignment="Center"
                            HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch" />

                <!-- Editing Content block -->
                <Grid Grid.Row="2" Visibility="{x:Bind Link.IsEditing, Mode=OneWay, Converter={StaticResource booleanVisibilityConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="2*" />
                    </Grid.ColumnDefinitions>

                    <controls:MarkdownEditorControl DataContext="{x:Bind Link.Editing, Mode=OneWay}"
                            x:Name="editSection" Margin="0" Grid.ColumnSpan="2" Grid.Row="0"
                            VerticalContentAlignment="Stretch" VerticalAlignment="Center"
                            HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch" />

                    <Button Background="Transparent" Grid.Column="0" Grid.Row="1" Content="Submit" Tapped="{x:Bind Link.SubmitEdit}" />
                    <Button Background="Transparent" Grid.Column="1" Grid.Row="1" Content="Cancel" Tapped="{x:Bind Link.CancelEdit}" />
                </Grid>

                <!-- Action block, flyout menu / vote / comment count -->
                <Grid x:Name="actionButtons" Grid.Row="3" Margin="0,0,0,0" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0"  Background="Transparent"
                    HorizontalContentAlignment="Left" HorizontalAlignment="Stretch"
                    BorderThickness="0" Padding="0" 
                    Margin="0,-12,-12,0"
                    FontFamily="Segoe UI Symbol">
                        <Grid>
                            <TextBlock Margin="0,0,0,0" FontSize="35" Text="&#xE10C;" />
                        </Grid>
                        <Button.Flyout>
                            <MenuFlyout>
                                <MenuFlyoutItem Text="Share Link" Tapped="{x:Bind Link.Share}"/>
                                <MenuFlyoutItem Text="Report" Tapped="{x:Bind Link.Report}"/>
                                <MenuFlyoutItem Text="Save" Tapped="{x:Bind Link.Save}"/>
                                <MenuFlyoutItem Text="User Details" Tapped="{x:Bind Link.GotoUserDetails}"/>
                                <MenuFlyoutItem Text="Edit" Tapped="{x:Bind Link.Edit}" Visibility="{x:Bind Link.CanEdit, Converter={StaticResource booleanVisibilityConverter}}" />
                                <MenuFlyoutItem Text="Delete" Tapped="{x:Bind Link.Delete}" Visibility="{x:Bind Link.CanDelete, Converter={StaticResource booleanVisibilityConverter}}" />
                            </MenuFlyout>
                        </Button.Flyout>
                    </Button>

                    <ContentControl Grid.Column="1" DataContext="{Binding Link.Votable, Mode=OneTime}" ContentTemplate="{StaticResource VotableControl}" />

                    <Button Grid.Column="2"
                        HorizontalContentAlignment="Right" HorizontalAlignment="Stretch"
                        Margin="0,-12,2,0"
                        BorderThickness="0" Padding="0,0,0,0" 
                        IsEnabled="False" DataContext="{x:Bind Link}" ContentTemplate="{StaticResource CommentCountControl}">
                    </Button>
                </Grid>
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate x:Name="LoadingTemplate" x:DataType="vm:LoadViewModel">
        <ProgressBar HorizontalAlignment="Stretch" IsIndeterminate="{x:Bind LoadPercent, Converter={StaticResource invertedFloatToBooleanConverter}, Mode=OneWay}" Value="{x:Bind LoadPercent, Mode=OneWay}" />
    </DataTemplate>

    <DataTemplate x:Name="CommentTemplate" x:DataType="vm:CommentViewModel">
        <Grid HorizontalAlignment="Stretch"
          Margin="{x:Bind Path=Depth, Converter={StaticResource commentDepthMarginConverter}}"
          MinHeight="50">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="7" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Grid.Column="0" Background="{x:Bind Path=Depth, Converter={StaticResource commentDepthColorConverter}}" />
            <Grid Margin="0,0,0,15" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Stretch" Visibility="{x:Bind Collapsed, Mode=OneWay, Converter={StaticResource invertedBooleanVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="102" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <!-- General Comment Header -->
                    <Button Grid.Column="0" Grid.RowSpan="2" BorderThickness="0" Margin="4,-10,0,0" Padding="0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left"
                        Holding="Button_Holding" Tapped="{x:Bind Minimize}">
                        <Button.Content>
                            <StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Border Margin="2,0,2,0" BorderThickness="0" Background="{x:Bind AuthorFlair, Converter={StaticResource authorFlairKindConverter}}">
                                        <TextBlock Style="{StaticResource PlainButtonTextBlock}" Foreground="{Binding AuthorFlair, Mode=OneTime, Converter={StaticResource fgAuthorFlairKindConverter}}" Margin="0,1,0,0" Text="{Binding Thing.Author}" />
                                    </Border>

                                    <TextBlock Style="{StaticResource PlainButtonTextBlock}" Opacity="0.6" FontStyle="Italic" Text="{x:Bind Thing.AuthorFlairText}" Margin="4,2,2,0"
                                   Visibility="{x:Bind HasAuthorFlair, Converter={StaticResource booleanVisibilityConverter}}"/>
                                </StackPanel>
                                <TextBlock Opacity="0.6" Style="{StaticResource PlainButtonTextBlock}" Text="{x:Bind Thing.CreatedUTC, Converter={StaticResource timeRelationConverter}}" Margin="2,0,0,0" />
                            </StackPanel>
                        </Button.Content>
                        <FlyoutBase.AttachedFlyout>
                            <MenuFlyout>
                                <MenuFlyoutItem Text="Report" Tapped="{x:Bind Report}"/>
                                <MenuFlyoutItem Text="Save" Tapped="{x:Bind Save}"/>
                                <MenuFlyoutItem Text="Share Comment" Tapped="{x:Bind Share}"/>
                                <MenuFlyoutItem Text="User Details" Tapped="{x:Bind GotoUserDetails}"/>
                                <MenuFlyoutItem Text="Reply" Tapped="{x:Bind GotoReply}"/>
                                <MenuFlyoutItem Text="Minimize" Tapped="{x:Bind Minimize}" />
                                <MenuFlyoutItem Text="Edit" Tapped="{x:Bind Edit}" Visibility="{x:Bind CanEdit, Converter={StaticResource booleanVisibilityConverter}}"/>
                                <MenuFlyoutItem Text="Delete" Tapped="{x:Bind Delete}" Visibility="{x:Bind CanDelete, Converter={StaticResource booleanVisibilityConverter}}" />

                            </MenuFlyout>
                        </FlyoutBase.AttachedFlyout>
                    </Button>

                    <!-- Votable Section -->
                    <ContentControl Grid.Column="1" DataContext="{Binding Votable, Mode=OneTime}" ContentTemplate="{StaticResource VotableControl}" />
                </Grid>
                <snoodom:MarkdownControl
                        Grid.ColumnSpan="2"
                        Grid.Row="1"
                        Markdown="{x:Bind Body}"
                        StyleProvider="{StaticResource markdownHelpers}"
                        CommandFactory="{StaticResource markdownHelpers}"
                        HorizontalAlignment="Stretch"
                        Margin="6,0,18,0"/>
            </Grid>

            <!-- Collapsed Comment Header -->
            <Grid Grid.Row="0" Grid.Column="1" HorizontalAlignment="Stretch" Visibility="{x:Bind Collapsed, Converter={StaticResource booleanVisibilityConverter}}">
                <Button  Margin="0,0,0,0" Padding="6,0,0,0"
                     BorderThickness="0"
                     HorizontalAlignment="Stretch" HorizontalContentAlignment="Left"
                     VerticalAlignment="Stretch" VerticalContentAlignment="Top"
                     Tapped="{x:Bind Minimize}">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Style="{StaticResource PlainButtonTextBlock}" Margin="0,0,12,0" Text="[+]" />
                            <StackPanel Margin="0,-6,0,0">
                                <Border Margin="0,0,0,0" BorderThickness="0" Padding="0" Background="{x:Bind AuthorFlair, Converter={StaticResource authorFlairKindConverter}}">
                                    <TextBlock Style="{StaticResource PlainButtonTextBlock}" Opacity="0.6" Margin="0,0,0,0" Text="{x:Bind Thing.Author}" />
                                </Border>
                                <TextBlock Style="{StaticResource PlainButtonTextBlock}" Opacity="0.6" Text="{x:Bind Thing.CreatedUTC, Converter={StaticResource timeRelationConverter}}" Margin="2,0,0,0" />
                            </StackPanel>
                        </StackPanel>
                    </Button.Content>
                </Button>
            </Grid>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Name="MoreItemTemplate" x:DataType="vm:MoreViewModel">
        <Grid>
            <Button Content="{x:Bind Text}" Tapped="{x:Bind LoadMore}"/>
        </Grid>
    </DataTemplate>
    
    <selector:CommentTemplateSelector x:Key="commentTemplateSelector"  CommentTemplate="{StaticResource CommentTemplate}" LoadFullyTemplate="{StaticResource LoadFullyTemplate}"
                                      LoadingTemplate="{StaticResource LoadingTemplate}" MoreTemplate="{StaticResource MoreItemTemplate}"/>

    <DataTemplate x:Key="CommentsView" x:DataType="vm:CommentsViewModel">
        <ListView HeaderTemplate="{StaticResource CardCommentView}"
                  ItemsSource="{x:Bind Comments}"
                  ItemContainerStyle="{StaticResource FullWidthListViewContainer}"
                  ItemTemplateSelector="{StaticResource commentTemplateSelector}">
            <ListView.ItemContainerTransitions>
                <TransitionCollection>
                    <AddDeleteThemeTransition/>
                </TransitionCollection>
            </ListView.ItemContainerTransitions>
        </ListView>
    </DataTemplate>
</ResourceDictionary>
